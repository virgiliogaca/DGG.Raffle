// <auto-generated />
using System;
using DGG.Raffle.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DGG.Raffle.Infrastructure.Migrations
{
    [DbContext(typeof(DggRaffleDbContext))]
    [Migration("20230706054701_Version_02")]
    partial class Version02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DGG.Raffle.Infrastructure.Abstract.Entities.Charities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Charities", "catalog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "sys",
                            CreatedDate = new DateTime(2023, 7, 6, 5, 47, 1, 230, DateTimeKind.Utc).AddTicks(1426),
                            IsActive = true,
                            Name = "Against Malaria Foundation"
                        });
                });

            modelBuilder.Entity("DGG.Raffle.Infrastructure.Abstract.Entities.RaffleEntries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CharityId")
                        .HasColumnType("int");

                    b.Property<string>("ChatterMovie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MoneyDonated")
                        .HasColumnType("float");

                    b.Property<bool>("isRaffleWinner")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CharityId");

                    b.ToTable("RaffleEntries", "dbo");
                });

            modelBuilder.Entity("DGG.Raffle.Infrastructure.Abstract.Entities.RaffleEntries", b =>
                {
                    b.HasOne("DGG.Raffle.Infrastructure.Abstract.Entities.Charities", "Charity")
                        .WithMany("RaffleEntry")
                        .HasForeignKey("CharityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charity");
                });

            modelBuilder.Entity("DGG.Raffle.Infrastructure.Abstract.Entities.Charities", b =>
                {
                    b.Navigation("RaffleEntry");
                });
#pragma warning restore 612, 618
        }
    }
}
